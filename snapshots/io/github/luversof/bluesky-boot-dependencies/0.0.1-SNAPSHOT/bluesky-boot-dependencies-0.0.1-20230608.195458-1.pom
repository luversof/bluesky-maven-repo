<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>bluesky-boot-dependencies</artifactId>
	<packaging>pom</packaging>
	<parent>
		<groupId>io.github.luversof</groupId>
		<artifactId>bluesky-boot-build</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<properties>
		<java.version>17</java.version>
		<spring-boot.version>3.1.0</spring-boot.version>
		<spring-cloud.version>2022.0.3</spring-cloud.version>
		<bluesky-boot.version>0.0.1-SNAPSHOT</bluesky-boot.version>
		<bluesky-boot-autoconfigure-devcheck.version>3.0.0-SNAPSHOT</bluesky-boot-autoconfigure-devcheck.version>
		<spring-boot-admin-starter.version>3.0.4</spring-boot-admin-starter.version>
		<springdoc-openapi.version>2.1.0</springdoc-openapi.version>
		<!-- tag:asciidoctor-properties[] -->
		<asciidoctor-maven-plugin.version>2.2.3</asciidoctor-maven-plugin.version>
		<asciidoctorj-diagram.version>2.2.8</asciidoctorj-diagram.version>
		<refdocs.build.directory>${project.build.directory}/refdocs/</refdocs.build.directory>
		<asciidoctor.outputDirectory>${project.build.directory}/generated-docs</asciidoctor.outputDirectory>
		<asciidoctor.preserveDirectories>true</asciidoctor.preserveDirectories>
		<asciidoctor.doctype>book</asciidoctor.doctype>
		<restdocs-api-spec.version>0.18.2</restdocs-api-spec.version>
		<restdocs-spec-maven-plugin.version>0.22</restdocs-spec-maven-plugin.version>
		<spring-asciidoctor-backends.version>0.0.5</spring-asciidoctor-backends.version>
		<!-- end:asciidoctor-properties[] -->
		<jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
		<jib-maven-plugin.version>3.3.2</jib-maven-plugin.version>
		<properties-maven-plugin.version>1.1.0</properties-maven-plugin.version>
		<filecopy-maven-plugin.version>1.0.2</filecopy-maven-plugin.version>
		<!-- (s) build properties -->
		<build.image>nexus-service:8083/luversof</build.image>
		<build.number>LOCAL_BUILD</build.number>
		<build.version>${project.version}</build.version>
		<!-- (e) build properties -->
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- (s) bluesky boot -->
			<dependency>
				<groupId>io.github.luversof</groupId>
				<artifactId>bluesky-boot</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.luversof</groupId>
				<artifactId>bluesky-boot-autoconfigure</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.luversof</groupId>
				<artifactId>bluesky-boot-docs</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.luversof</groupId>
				<artifactId>bluesky-boot-test-autoconfigure</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.luversof</groupId>
				<artifactId>bluesky-boot-autoconfigure-devcheck</artifactId>
				<version>${bluesky-boot-autoconfigure-devcheck.version}</version>
			</dependency>
			<!-- (e) bluesky boot -->
			<!-- (s) spring cloud -->
			<!-- 버전관리를 편하게 하려고 cloud 의존성을 여기서 관리하고 있으나 분리하는 것이 좋다. -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- (e) spring cloud -->
			<!-- (s) mybatis -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>3.0.0</version>
			</dependency>
			<!-- (e) mybatis -->
			<!-- (s) boot-admin -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>${spring-boot-admin-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>${spring-boot-admin-starter.version}</version>
			</dependency>
			<!-- (e) boot-admin -->
			<!-- (s) springdoc-openapi -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
				<version>${springdoc-openapi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
				<version>${springdoc-openapi.version}</version>
			</dependency>
			<!-- (e) springdoc-openapi -->
			<!-- (s) thymeleaf-layout-dialect -->
			<dependency>
				<groupId>com.github.zhanhb</groupId>
				<artifactId>thymeleaf-layout-dialect</artifactId>
				<version>3.0.0</version>
			</dependency>
			<!-- (e) thymeleaf-layout-dialect -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<!-- (s) restdocs-api-spec -->
			<dependency>
				<groupId>com.epages</groupId>
				<artifactId>restdocs-api-spec-mockmvc</artifactId>
				<version>${restdocs-api-spec.version}</version>
			</dependency>
			<!-- (e) restdocs-api-spec -->
		</dependencies>
	</dependencyManagement>
	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>build-info</goal>
							</goals>
							<configuration>
								<additionalProperties>
									<buildNumber>${build.number}</buildNumber>
								</additionalProperties>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- (s) sonarqube plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
							<include>**/*Tests.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- (e) sonarqube plugin -->
				<!-- (s) asciidoctor plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-asciidoc-resources</id>
							<phase>generate-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${refdocs.build.directory}</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/asciidoc</directory>
										<filtering>false</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${asciidoctor-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctorj-diagram</artifactId>
							<version>${asciidoctorj-diagram.version}</version>
						</dependency>
						<dependency>
							<groupId>org.springframework.restdocs</groupId>
							<artifactId>spring-restdocs-asciidoctor</artifactId>
							<version>${spring-restdocs.version}</version>
						</dependency>
						<dependency>
							<groupId>io.spring.asciidoctor.backends</groupId>
							<artifactId>spring-asciidoctor-backends</artifactId>
							<version>${spring-asciidoctor-backends.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<sourceDirectory>${refdocs.build.directory}</sourceDirectory>
						<requires>
							<require>asciidoctor-diagram</require>
						</requires>
					</configuration>
					<executions>
						<execution>
							<id>generate-html-documentation</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>process-asciidoc</goal>
							</goals>
							<configuration>
								<backend>spring-html</backend>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.github.berkleytechnologyservices</groupId>
					<artifactId>restdocs-spec-maven-plugin</artifactId>
					<version>${restdocs-spec-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<specification>OPENAPI_V3</specification>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- (e) asciidoctor plugin -->
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<version>${jib-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<container>
							<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
						</container>
						<from>
							<image>eclipse-temurin:17-jre-alpine</image>
						</from>
						<to>
							<image>${build.image}/${project.artifactId}</image>
							<tags>
								<tag>${project.version}.${build.number}</tag>
							</tags>
						</to>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${properties-maven-plugin.version}</version>
					<configuration>
						<outputFile>
                			build.properties
						</outputFile>
					</configuration>
				</plugin>
				<plugin>
					<groupId>io.github.luversof</groupId>
					<artifactId>filecopy-maven-plugin</artifactId>
					<version>${filecopy-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>filecopy</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>filecopy</goal>
							</goals>
							<configuration>
								<fileInfos>
									<fileInfo>
										<sourceRegex>^([a-zA-Z]*)(_zh-TW.properties)$</sourceRegex>
										<targetRegex>$1_zh.properties</targetRegex>
									</fileInfo>
								</fileInfos>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>sonarqube</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>asciidoctor</id>
			<build>
				<plugins>
					<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
						</plugin> -->
						<!--
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
					</plugin>
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>io.github.berkleytechnologyservices</groupId>
						<artifactId>restdocs-spec-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>